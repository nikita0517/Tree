/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
      TreeNode *root=NULL;
    TreeNode* sortedArray(vector<int>& nums,int s,int e){
        if(s>e){
            return 0;
        }
        else{
            int mid=(s+e)/2;
            TreeNode *node=new TreeNode(nums[mid]);
            if(root==NULL)
                root=node;
            node->left=sortedArray(nums,s,mid-1);
            node->right=sortedArray(nums,mid+1,e);
            return node;
            
        }
    }
    TreeNode* sortedArrayToBST(vector<int>& nums) {
      
        int s=0,e=nums.size()-1;
        int n=nums.size();
        sortedArray(nums,s,e);
        return root;
    }
};
